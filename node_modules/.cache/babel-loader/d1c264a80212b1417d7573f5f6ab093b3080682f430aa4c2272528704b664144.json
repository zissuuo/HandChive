{"ast":null,"code":"var _jsxFileName = \"/Users/kimjisu/Desktop/HandChive/src/component/page/FirstPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ImgUpload from '../ui/ImgUpload';\nimport styled from 'styled-components';\nimport Button from '../ui/Button';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'NanumNeo';\n    src: url('/fonts/NanumSquareR.ttf') format('truetype');\n  }\n    body {\n    font-family: 'NanumNeo', sans-serif;\n    }\n `;\n\n// 전체적인 레이아웃을 담당하는 코드\n_c = GlobalStyle;\nconst Wrapper = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  background: linear-gradient(to bottom, #83C4FF, #FFFFFF); /* 그라데이션 색상 조정 */\n  padding-top: 90px;\n`;\n\n// 제목 담당\n_c2 = Wrapper;\nconst MainTitleText = styled.p`\n    font-size: 25px;\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: -5px;\n`;\n\n// 소제목\n_c3 = MainTitleText;\nconst SubTitleText = styled.p`\n    font-size: 11px;\n    text-align: center;\n    padding-bottom: 40px;\n`;\n_c4 = SubTitleText;\nconst Box = styled.div`\n    padding-bottom: 30px;\n    background-color: white;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    //align-items: center;\n    min-height: 270px;\n    max-height: 270px;\n    margin-bottom: 20px;\n    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1); /* 그림자 효과 추가 */\n`;\n\n// 업로드 컴포넌트 정렬\n_c5 = Box;\nconst UploadContainer = styled.div`\n    margin-top: 40px;\n    //display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\n// 버튼 컴포넌트 둘러싸는 아이\n_c6 = UploadContainer;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n_c7 = ButtonContainer;\nconst FirstPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [imgData, setImageData] = useState([]);\n  const handleFileSelect = file => {\n    // 선택한 파일을 처리하는 로직을 추가할 수 있습니다.\n    console.log('Selected file:', file);\n    // 여기서 파일을 업로드하거나 다른 작업을 수행할 수 있습니다.\n  };\n\n  const handleButtonClick = async () => {\n    try {\n      // 이미지를 FormData로 만들어 서버로 전송\n      const formData = new FormData();\n      formData.append('image', imgData);\n\n      // 서버로 이미지 업로드 요청\n      const response = await axios.post('http://localhost:5000/upload-image', formData);\n      if (response && response.data && response.data.pdfUrl) {\n        // 서버로부터 받은 PDF URL을 가져옴\n        const pdfUrl = response.data.pdfUrl;\n\n        // Second-page로 이동하면서 PDF URL 전달\n        navigate('second-page', {\n          state: {\n            pdfUrl\n          }\n        });\n      } else {\n        console.error('No PDF URL found in the server response.');\n        // 여기서 처리할 로직 추가 (예: 사용자에게 알림 등)\n      }\n    } catch (error) {\n      console.error('Error uploading image to server:', error);\n      // 여기서 에러 처리 로직 추가\n    }\n  };\n\n  // const handleButtonClick = () => {\n  //   console.log(\"Button clicked!\");\n  //   navigate('second-page'); //페이지 이동시 사용\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MainTitleText, {\n        children: \"HANDCHIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubTitleText, {\n        children: \"\\uB0B4 \\uC190\\uC73C\\uB85C \\uC9C1\\uC811 \\uADF8\\uB9AC\\uB294 \\uBB38\\uC11C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(UploadContainer, {\n          children: /*#__PURE__*/_jsxDEV(ImgUpload, {\n            onFileSelect: handleFileSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Convert \",\n          onClick: handleButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n};\n_s(FirstPage, \"9OvmlThd8pyZznjd998HcGYo75c=\", false, function () {\n  return [useNavigate];\n});\n_c8 = FirstPage;\nexport default FirstPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"MainTitleText\");\n$RefreshReg$(_c4, \"SubTitleText\");\n$RefreshReg$(_c5, \"Box\");\n$RefreshReg$(_c6, \"UploadContainer\");\n$RefreshReg$(_c7, \"ButtonContainer\");\n$RefreshReg$(_c8, \"FirstPage\");","map":{"version":3,"names":["React","ImgUpload","styled","Button","axios","useNavigate","createGlobalStyle","useState","jsxDEV","_jsxDEV","GlobalStyle","_c","Wrapper","div","_c2","MainTitleText","p","_c3","SubTitleText","_c4","Box","_c5","UploadContainer","_c6","ButtonContainer","_c7","FirstPage","_s","navigate","imgData","setImageData","handleFileSelect","file","console","log","handleButtonClick","formData","FormData","append","response","post","data","pdfUrl","state","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","title","onClick","_c8","$RefreshReg$"],"sources":["/Users/kimjisu/Desktop/HandChive/src/component/page/FirstPage.jsx"],"sourcesContent":["import React from 'react';\nimport ImgUpload from '../ui/ImgUpload';\nimport styled from 'styled-components';\nimport Button from '../ui/Button';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { useState } from 'react';\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'NanumNeo';\n    src: url('/fonts/NanumSquareR.ttf') format('truetype');\n  }\n    body {\n    font-family: 'NanumNeo', sans-serif;\n    }\n `\n\n \n// 전체적인 레이아웃을 담당하는 코드\nconst Wrapper = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  background: linear-gradient(to bottom, #83C4FF, #FFFFFF); /* 그라데이션 색상 조정 */\n  padding-top: 90px;\n`;\n\n\n// 제목 담당\nconst MainTitleText = styled.p`\n    font-size: 25px;\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: -5px;\n`;\n\n// 소제목\nconst SubTitleText = styled.p`\n    font-size: 11px;\n    text-align: center;\n    padding-bottom: 40px;\n`;\n\nconst Box = styled.div`\n    padding-bottom: 30px;\n    background-color: white;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    //align-items: center;\n    min-height: 270px;\n    max-height: 270px;\n    margin-bottom: 20px;\n    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1); /* 그림자 효과 추가 */\n`;\n\n// 업로드 컴포넌트 정렬\nconst UploadContainer = styled.div`\n    margin-top: 40px;\n    //display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\n// 버튼 컴포넌트 둘러싸는 아이\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\n\n\nconst FirstPage = () => {\n    const navigate = useNavigate();\n    const [imgData, setImageData] = useState([]);\n\n    const handleFileSelect = (file) => {\n    // 선택한 파일을 처리하는 로직을 추가할 수 있습니다.\n    console.log('Selected file:', file);\n    // 여기서 파일을 업로드하거나 다른 작업을 수행할 수 있습니다.\n  };\n\n    const handleButtonClick = async () => {\n      try {\n        // 이미지를 FormData로 만들어 서버로 전송\n        const formData = new FormData();\n        formData.append('image', imgData);\n    \n        // 서버로 이미지 업로드 요청\n        const response = await axios.post('http://localhost:5000/upload-image', formData);\n    \n        if (response && response.data && response.data.pdfUrl) {\n          // 서버로부터 받은 PDF URL을 가져옴\n          const pdfUrl = response.data.pdfUrl;\n    \n          // Second-page로 이동하면서 PDF URL 전달\n          navigate('second-page', { state: { pdfUrl } });\n        } else {\n          console.error('No PDF URL found in the server response.');\n          // 여기서 처리할 로직 추가 (예: 사용자에게 알림 등)\n        }\n      } catch (error) {\n        console.error('Error uploading image to server:', error);\n        // 여기서 에러 처리 로직 추가\n      }\n    };\n  \n  \n  \n  // const handleButtonClick = () => {\n  //   console.log(\"Button clicked!\");\n  //   navigate('second-page'); //페이지 이동시 사용\n  // };\n\n  return (\n  <div>\n        <GlobalStyle />\n            <Wrapper>\n                <MainTitleText>HANDCHIVE</MainTitleText>\n                <SubTitleText>내 손으로 직접 그리는 문서</SubTitleText>\n                <Box>\n                    <UploadContainer>\n                        <ImgUpload onFileSelect={handleFileSelect} />\n                    </UploadContainer>\n                </Box>\n                <ButtonContainer>\n                    <Button\n                            title = \"Convert \"\n                            onClick={handleButtonClick} />\n                </ButtonContainer>\n            </Wrapper>\n  </div>\n  );\n};\n\nexport default FirstPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}